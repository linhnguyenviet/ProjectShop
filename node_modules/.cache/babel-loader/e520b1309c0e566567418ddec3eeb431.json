{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\abc\\\\ProjectShop\\\\ProjectShop\\\\src\\\\ProductList\\\\resultView\\\\resultViewGrid.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport GridView from './GridView/GridView';\n\nclass ResultViewGrid extends React.Component {\n  render() {\n    const filterColor = this.props.dataList.filterColor;\n    console.log(filterColor);\n    const filterSpecies = this.props.dataList.filterSpecies;\n    const filterPrice = this.props.dataList.filterPrice; // console.log(\"price min : \" , (filterPrice.min));\n    // console.log(\"price max : \" , (filterPrice.max));\n\n    const listFilter = this.props.dataList.data.filter(list => {\n      return list.color.indexOf(filterColor) !== -1 && list.species.indexOf(filterSpecies) !== -1 && filterPrice.min <= parseInt(list.price) && parseInt(list.price) <= filterPrice.max;\n    });\n    console.log(listFilter);\n    const sortProduct = listFilter.slice(0);\n    this.props.dataList.sort === \"name\" ? sortProduct.sort((a, b) => {\n      let x = a.name.toLowerCase();\n      let y = b.name.toLowerCase();\n      return x < y ? -1 : x > y ? 1 : 0;\n    }) : sortProduct.sort((a, b) => {\n      return a.price - b.price;\n    });\n    const listData = sortProduct.map((item, index) => {\n      return React.createElement(GridView, Object.assign({\n        key: index,\n        index: index\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"resultViewGrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, listData);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state\n  };\n};\n\nexport default connect(mapStateToProps, null)(ResultViewGrid);","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\abc\\ProjectShop\\ProjectShop\\src\\ProductList\\resultView\\resultViewGrid.js"],"names":["React","connect","GridView","ResultViewGrid","Component","render","filterColor","props","dataList","console","log","filterSpecies","filterPrice","listFilter","data","filter","list","color","indexOf","species","min","parseInt","price","max","sortProduct","slice","sort","a","b","x","name","toLowerCase","y","listData","map","item","index","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAIA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AACzCC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,WAAxC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,UAAMK,aAAa,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBG,aAA1C;AACA,UAAMC,WAAW,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBI,WAAxC,CAJK,CAKL;AACA;;AACA,UAAMC,UAAU,GAAG,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,IAApB,CAAyBC,MAAzB,CACdC,IAAD,IAAU;AACN,aAAOA,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBZ,WAAnB,MAAoC,CAAC,CAArC,IAA0CU,IAAI,CAACG,OAAL,CAAaD,OAAb,CAAqBP,aAArB,MAAwC,CAAC,CAAnF,IAAwFC,WAAW,CAACQ,GAAZ,IAAmBC,QAAQ,CAACL,IAAI,CAACM,KAAN,CAAnH,IAAmID,QAAQ,CAACL,IAAI,CAACM,KAAN,CAAR,IAAwBV,WAAW,CAACW,GAA9K;AACH,KAHc,CAAnB;AAKAd,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACA,UAAMW,WAAW,GAAGX,UAAU,CAACY,KAAX,CAAiB,CAAjB,CAApB;AAEA,SAAKlB,KAAL,CAAWC,QAAX,CAAoBkB,IAApB,KAA6B,MAA7B,GAEQF,WAAW,CAACE,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAS;AACtB,UAAIC,CAAC,GAAGF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAR;AACA,UAAIC,CAAC,GAAGJ,CAAC,CAACE,IAAF,CAAOC,WAAP,EAAR;AACA,aAAOF,CAAC,GAAGG,CAAJ,GAAQ,CAAC,CAAT,GAAaH,CAAC,GAAGG,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACH,KAJD,CAFR,GAQQR,WAAW,CAACE,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAS;AACtB,aAAOD,CAAC,CAACL,KAAF,GAAUM,CAAC,CAACN,KAAnB;AACH,KAFD,CARR;AAYA,UAAMW,QAAQ,GAAGT,WAAW,CAACU,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9C,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,KAAf;AAAsB,QAAA,KAAK,EAAEA;AAA7B,SAAwCD,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAFgB,CAAjB;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,QADL,CADJ;AAKH;;AApCwC;;AAwC7C,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH9B,IAAAA,QAAQ,EAAE8B;AADP,GAAP;AAGH,CAJD;;AAOA,eAAerC,OAAO,CAACoC,eAAD,EAAkB,IAAlB,CAAP,CAA+BlC,cAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GridView from './GridView/GridView';\r\n\r\n\r\n\r\nclass ResultViewGrid extends React.Component {\r\n    render() {\r\n        const filterColor = this.props.dataList.filterColor;\r\n        console.log(filterColor)\r\n        const filterSpecies = this.props.dataList.filterSpecies;\r\n        const filterPrice = this.props.dataList.filterPrice;\r\n        // console.log(\"price min : \" , (filterPrice.min));\r\n        // console.log(\"price max : \" , (filterPrice.max));\r\n        const listFilter = this.props.dataList.data.filter(\r\n            (list) => {\r\n                return list.color.indexOf(filterColor) !== -1 && list.species.indexOf(filterSpecies) !== -1 && filterPrice.min <= parseInt(list.price) && parseInt(list.price) <= filterPrice.max;\r\n            }\r\n        );\r\n        console.log(listFilter);\r\n        const sortProduct = listFilter.slice(0);\r\n\r\n        this.props.dataList.sort === \"name\"\r\n            ?\r\n                sortProduct.sort((a,b) => {\r\n                    let x = a.name.toLowerCase();\r\n                    let y = b.name.toLowerCase();\r\n                    return x < y ? -1 : x > y ? 1 : 0;\r\n                })\r\n            :\r\n                sortProduct.sort((a,b) => {\r\n                    return a.price - b.price;\r\n                })\r\n\r\n        const listData = sortProduct.map((item, index) => {\r\n            return <GridView key={index} index={index} {...item}/>;\r\n        });\r\n        return (\r\n            <div className=\"resultViewGrid\">\r\n                {listData}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataList: state\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, null)(ResultViewGrid);\r\n"]},"metadata":{},"sourceType":"module"}