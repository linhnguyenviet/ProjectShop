{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\abc\\\\ProjectShop\\\\ProjectShop\\\\src\\\\ProductList\\\\resultView\\\\resultViewGrid.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport GridView from './GridView/GridView';\n\nclass ResultViewGrid extends React.Component {\n  constructor() {\n    super();\n\n    this.change_alias = alias => {\n      var str = alias;\n      str = str.toLowerCase();\n      str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\n      str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\n      str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\n      str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\n      str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\n      str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\n      str = str.replace(/đ/g, \"d\");\n      str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g, \" \");\n      str = str.replace(/ + /g, \" \");\n      str = str.trim();\n      return str;\n    };\n\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 9\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n\n  render() {\n    const filterColor = this.props.dataList.filterColor;\n    const filterSpecies = this.props.dataList.filterSpecies;\n    const filterPrice = this.props.dataList.filterPrice;\n    const search = this.props.dataList.search; // console.log(\"price min : \" , (filterPrice.min));\n    // console.log(\"price max : \" , (filterPrice.max));\n\n    const listFilter = this.props.dataList.data.filter(list => {\n      return list.color.indexOf(filterColor) !== -1 && list.species.indexOf(filterSpecies) !== -1 && filterPrice.min <= parseInt(list.price) && parseInt(list.price) <= filterPrice.max;\n    }); // console.log(listFilter);\n\n    var searchProduct;\n    search === \"\" && search === \"C\" ? searchProduct = listFilter.filter(item => {\n      return item.name.includes(\"C\");\n    }) : searchProduct = listFilter.filter(item => {\n      return this.change_alias(item.name.toLowerCase()).includes(this.change_alias(search.toString().toLowerCase()));\n    });\n    const sortProduct = searchProduct.slice(0);\n    this.props.dataList.sort === \"name\" ? sortProduct.sort((a, b) => {\n      let x = a.name.toLowerCase();\n      let y = b.name.toLowerCase();\n      return x < y ? -1 : x > y ? 1 : 0;\n    }) : sortProduct.sort((a, b) => {\n      return a.price - b.price;\n    }); // const listData = sortProduct.map((item, index) => {\n    //     return <GridView key={index} index={index} {...item} />;\n    // });\n\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage; // Logic for displaying current todos\n\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = sortProduct.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map((item, index) => {\n      return React.createElement(GridView, Object.assign({\n        key: index,\n        index: index\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(sortProduct.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"button\", {\n        type: \"button\",\n        className: \"page\",\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, number);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resultViewGrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, renderTodos), React.createElement(\"div\", {\n      className: \"pageController_product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"pagePrev\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" Trang tr\\u01B0\\u1EDBc \"), renderPageNumbers, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"pageLast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" Trang cu\\u1ED1i \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state\n  };\n};\n\nexport default connect(mapStateToProps, null)(ResultViewGrid);","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\abc\\ProjectShop\\ProjectShop\\src\\ProductList\\resultView\\resultViewGrid.js"],"names":["React","connect","GridView","ResultViewGrid","Component","constructor","change_alias","alias","str","toLowerCase","replace","trim","state","currentPage","todosPerPage","handleClick","bind","event","setState","Number","target","id","render","filterColor","props","dataList","filterSpecies","filterPrice","search","listFilter","data","filter","list","color","indexOf","species","min","parseInt","price","max","searchProduct","item","name","includes","toString","sortProduct","slice","sort","a","b","x","y","indexOfLastTodo","indexOfFirstTodo","currentTodos","renderTodos","map","index","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GridView from './GridView/GridView';\r\n\r\n\r\n\r\nclass ResultViewGrid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentPage: 1,\r\n            todosPerPage: 9\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({\r\n            currentPage: Number(event.target.id)\r\n        });\r\n    }\r\n    change_alias = (alias) => {\r\n        var str = alias;\r\n        str = str.toLowerCase();\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,\"a\"); \r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,\"e\"); \r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g,\"i\"); \r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,\"o\"); \r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,\"u\"); \r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,\"y\"); \r\n        str = str.replace(/đ/g,\"d\");\r\n        str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g,\" \");\r\n        str = str.replace(/ + /g,\" \");\r\n        str = str.trim(); \r\n        return str;\r\n    }\r\n\r\n    render() {\r\n        const filterColor = this.props.dataList.filterColor;\r\n        const filterSpecies = this.props.dataList.filterSpecies;\r\n        const filterPrice = this.props.dataList.filterPrice;\r\n        const search = this.props.dataList.search;\r\n\r\n        // console.log(\"price min : \" , (filterPrice.min));\r\n        // console.log(\"price max : \" , (filterPrice.max));\r\n        const listFilter = this.props.dataList.data.filter(\r\n            (list) => {\r\n                return list.color.indexOf(filterColor) !== -1 && list.species.indexOf(filterSpecies) !== -1 && filterPrice.min <= parseInt(list.price) && parseInt(list.price) <= filterPrice.max;\r\n            }\r\n        );\r\n        // console.log(listFilter);\r\n        var searchProduct;\r\n        (search === \"\" && search === \"C\")\r\n            ? searchProduct = listFilter.filter(\r\n                (item) => {\r\n                    return item.name.includes(\"C\");\r\n                }\r\n            )\r\n            : searchProduct = listFilter.filter(\r\n                (item) => {\r\n                    return this.change_alias(item.name.toLowerCase()).includes(this.change_alias(search.toString().toLowerCase()));\r\n                }\r\n            )\r\n        const sortProduct = searchProduct.slice(0);\r\n\r\n        this.props.dataList.sort === \"name\"\r\n            ?\r\n            sortProduct.sort((a, b) => {\r\n                let x = a.name.toLowerCase();\r\n                let y = b.name.toLowerCase();\r\n                return x < y ? -1 : x > y ? 1 : 0;\r\n            })\r\n            :\r\n            sortProduct.sort((a, b) => {\r\n                return a.price - b.price;\r\n            })\r\n\r\n        // const listData = sortProduct.map((item, index) => {\r\n        //     return <GridView key={index} index={index} {...item} />;\r\n        // });\r\n\r\n\r\n        const { currentPage, todosPerPage } = this.state;\r\n\r\n        // Logic for displaying current todos\r\n        const indexOfLastTodo = currentPage * todosPerPage;\r\n        const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n        const currentTodos = sortProduct.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n        const renderTodos = currentTodos.map((item, index) => {\r\n            return <GridView key={index} index={index} {...item} />;\r\n        });\r\n\r\n        // Logic for displaying page numbers\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(sortProduct.length / todosPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            return (\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"page\"\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={this.handleClick}\r\n                >\r\n                    {number}\r\n                </button>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"resultViewGrid\">\r\n                    {renderTodos}\r\n                </div>\r\n                <div className=\"pageController_product\">\r\n                    <button type=\"button\" className=\"pagePrev\"> Trang trước </button>\r\n                    {renderPageNumbers}\r\n                    <button type=\"button\" className=\"pageLast\"> Trang cuối </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataList: state\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, null)(ResultViewGrid);\r\n"]},"metadata":{},"sourceType":"module"}