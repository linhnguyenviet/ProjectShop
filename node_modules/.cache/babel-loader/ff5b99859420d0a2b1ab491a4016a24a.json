{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\abc\\\\ProjectShop\\\\ProjectShop\\\\src\\\\ProductList\\\\resultView\\\\resultViewList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ListView from './ListView/ListView';\n\nclass ResultViewList extends React.Component {\n  render() {\n    const filterColor = this.props.dataList.filterColor;\n    const filterSpecies = this.props.dataList.filterSpecies;\n    const filterPrice = this.props.dataList.filterPrice;\n    const listFilter = this.props.dataList.data.filter(list => {\n      return list.color.indexOf(filterColor) !== -1 && list.species.indexOf(filterSpecies) !== -1 && filterPrice.min <= parseInt(list.price) && parseInt(list.price) <= filterPrice.max;\n    });\n    const sortProduct = listFilter.slice(0);\n    this.props.dataList.sort === \"name\" ? sortProduct.sort((a, b) => {\n      let x = a.name.toLowerCase();\n      let y = b.name.toLowerCase();\n      return x < y ? -1 : x > y ? 1 : 0;\n    }) : sortProduct.sort((a, b) => {\n      return a.price - b.price;\n    });\n    const listData = sortProduct.map((item, index) => {\n      return React.createElement(ListView, Object.assign({\n        key: index,\n        index: index\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"resultViewList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, listData);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state\n  };\n};\n\nexport default connect(mapStateToProps, null)(ResultViewList);","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\abc\\ProjectShop\\ProjectShop\\src\\ProductList\\resultView\\resultViewList.js"],"names":["React","connect","ListView","ResultViewList","Component","render","filterColor","props","dataList","filterSpecies","filterPrice","listFilter","data","filter","list","color","indexOf","species","min","parseInt","price","max","sortProduct","slice","sort","a","b","x","name","toLowerCase","y","listData","map","item","index","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAIA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AACzCC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,WAAxC;AACA,UAAMG,aAAa,GAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,aAA1C;AACA,UAAMC,WAAW,GAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBE,WAAxC;AACA,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,IAApB,CAAyBC,MAAzB,CACdC,IAAD,IAAU;AACN,aAAOA,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBV,WAAnB,MAAoC,CAAC,CAArC,IAA0CQ,IAAI,CAACG,OAAL,CAAaD,OAAb,CAAqBP,aAArB,MAAwC,CAAC,CAAnF,IAAwFC,WAAW,CAACQ,GAAZ,IAAmBC,QAAQ,CAACL,IAAI,CAACM,KAAN,CAAnH,IAAmID,QAAQ,CAACL,IAAI,CAACM,KAAN,CAAR,IAAwBV,WAAW,CAACW,GAA9K;AACH,KAHc,CAAnB;AAKA,UAAMC,WAAW,GAAGX,UAAU,CAACY,KAAX,CAAiB,CAAjB,CAApB;AAEA,SAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,IAApB,KAA6B,MAA7B,GAEQF,WAAW,CAACE,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAS;AACtB,UAAIC,CAAC,GAAGF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAR;AACA,UAAIC,CAAC,GAAGJ,CAAC,CAACE,IAAF,CAAOC,WAAP,EAAR;AACA,aAAOF,CAAC,GAAGG,CAAJ,GAAQ,CAAC,CAAT,GAAaH,CAAC,GAAGG,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACH,KAJD,CAFR,GAQQR,WAAW,CAACE,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAS;AACtB,aAAOD,CAAC,CAACL,KAAF,GAAUM,CAAC,CAACN,KAAnB;AACH,KAFD,CARR;AAYA,UAAMW,QAAQ,GAAGT,WAAW,CAACU,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9C,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,KAAf;AAAsB,QAAA,KAAK,EAAEA;AAA7B,SAAwCD,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAFgB,CAAjB;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,QADL,CADJ;AAKH;;AAhCwC;;AAoC7C,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH5B,IAAAA,QAAQ,EAAE4B;AADP,GAAP;AAGH,CAJD;;AAKA,eAAenC,OAAO,CAACkC,eAAD,EAAkB,IAAlB,CAAP,CAA+BhC,cAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ListView from './ListView/ListView';\r\n\r\n\r\n\r\nclass ResultViewList extends React.Component {\r\n    render() {\r\n        const filterColor = this.props.dataList.filterColor;\r\n        const filterSpecies = this.props.dataList.filterSpecies;\r\n        const filterPrice = this.props.dataList.filterPrice;\r\n        const listFilter = this.props.dataList.data.filter(\r\n            (list) => {\r\n                return list.color.indexOf(filterColor) !== -1 && list.species.indexOf(filterSpecies) !== -1 && filterPrice.min <= parseInt(list.price) && parseInt(list.price) <= filterPrice.max;\r\n            }\r\n        );\r\n        const sortProduct = listFilter.slice(0);\r\n\r\n        this.props.dataList.sort === \"name\"\r\n            ?\r\n                sortProduct.sort((a,b) => {\r\n                    let x = a.name.toLowerCase();\r\n                    let y = b.name.toLowerCase();\r\n                    return x < y ? -1 : x > y ? 1 : 0;\r\n                })\r\n            :\r\n                sortProduct.sort((a,b) => {\r\n                    return a.price - b.price;\r\n                })\r\n\r\n        const listData = sortProduct.map((item, index) => {\r\n            return <ListView key={index} index={index} {...item}/>;\r\n        });\r\n        return (\r\n            <div className=\"resultViewList\">\r\n                {listData}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataList: state\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(ResultViewList);\r\n"]},"metadata":{},"sourceType":"module"}